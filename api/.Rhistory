## function definitions
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(paste0("Fisher p-value: ",table_fisher$p.value), paste0("Bionominal p-value: ",table_binom$p.value)))
}
############################################
############################################
## merge table
grin_data_all <- rbind(c(missense_psych, missense_all), c(lof_psych, lof_all))
############################################
############################################
## calculate p-values
calculate_p_values(grin_data_all)
############################################
## 2021-04-13
############################################
## enter your count data here
missense_all <- 38
missense_psych <- 2
lof_all <- 83
lof_psych <- 22
############################################
############################################
## function definitions
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(paste0("Fisher p-value: ",table_fisher$p.value), paste0("Bionominal p-value: ",table_binom$p.value)))
}
############################################
############################################
## merge table
grin_data_all <- rbind(c(missense_psych, missense_all), c(lof_psych, lof_all))
############################################
############################################
## calculate p-values
calculate_p_values(grin_data_all)
############################################
############################################
## load libraries
## to do: change to DBI/RMariaDB, have to automate connection using yml file
library(tidyverse)	##needed for general table operations
library(jsonlite)	##needed for HGNC requests
library(DBI)		##needed for MySQL data export
library(RMariaDB)	##needed for MySQL data export
library(sqlr)		##needed for MySQL data export
############################################
############################################
## define functions
hgnc_id_from_prevsymbol <- function(symbol_input)  {
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/prev_symbol/", symbol_input))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) symbol else "") %>%
mutate(score = if (exists('score', where = hgnc_id_from_symbol)) score else 0) %>%
arrange(desc(score)) %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return(as.integer(hgnc_id_from_symbol$hgnc_id[1]))
}
hgnc_id_from_aliassymbol <- function(symbol_input)  {
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/alias_symbol/", symbol_input))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) symbol else "") %>%
mutate(score = if (exists('score', where = hgnc_id_from_symbol)) score else 0) %>%
arrange(desc(score)) %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return(as.integer(hgnc_id_from_symbol$hgnc_id[1]))
}
hgnc_id_from_symbol <- function(symbol_tibble) {
symbol_list_tibble <- as_tibble(symbol_tibble) %>% select(symbol = value) %>% mutate(symbol = toupper(symbol))
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/symbol/", str_c(symbol_list_tibble$symbol, collapse = "+OR+")))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) toupper(symbol) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- symbol_list_tibble %>%
left_join(hgnc_id_from_symbol, by = "symbol") %>%
select(hgnc_id)
return(return_tibble)
}
hgnc_id_from_symbol_grouped <- function(input_tibble, request_max = 150) {
input_tibble <- as_tibble(input_tibble)
row_number <- nrow(input_tibble)
groups_number <- ceiling(row_number/request_max)
input_tibble_request <- input_tibble %>%
mutate(group = sample(1:groups_number, row_number, replace=T)) %>%
group_by(group) %>%
mutate(response = hgnc_id_from_symbol(value)$hgnc_id) %>%
ungroup()
input_tibble_request_repair <- input_tibble_request %>%
filter(is.na(response)) %>%
select(value) %>%
unique() %>%
rowwise() %>%
mutate(response = hgnc_id_from_prevsymbol(value)) %>%
mutate(response = case_when(!is.na(response) ~ response, is.na(response) ~ hgnc_id_from_aliassymbol(value)))
input_tibble_request <- input_tibble_request %>%
left_join(input_tibble_request_repair, by = "value") %>%
mutate(response = case_when(!is.na(response.x) ~ response.x, is.na(response.x) ~ response.y))
return(input_tibble_request$response)
}
hgnc_id_from_symbol_grouped("NAA10")
hgnc_id_from_symbol_grouped("NAT1")
hgnc_id_from_symbol_grouped("ARD1")
symbol_from_hgnc_id <- function(hgnc_id_tibble) {
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>% select(hgnc_id = value) %>% mutate(hgnc_id = toupper(hgnc_id))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(hgnc_id)
return(return_tibble)
}
symbol_from_hgnc_id("18704")
hgnc_id_tibble <- "18704"
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>% select(hgnc_id = value) %>% mutate(hgnc_id = toupper(hgnc_id))
hgnc_id_list_tibble
fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id
hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(hgnc_id)
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return_tibble
hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id")
hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.character(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return_tibble
hgnc_id_from_hgnc_id
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>%
select(hgnc_id = value) %>%
mutate(hgnc_id = as.integer(hgnc_id))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return_tibble
symbol_from_hgnc_id <- function(hgnc_id_tibble) {
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>%
select(hgnc_id = value) %>%
mutate(hgnc_id = as.integer(hgnc_id))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return(return_tibble)
}
symbol_from_hgnc_id("NAA10")
symbol_from_hgnc_id("1753")
symbol_from_hgnc_id("18704")
symbol_from_hgnc_id(c("18704", "1753"))
############################################
## load libraries
library(tidyverse)	##needed for general table operations
library(jsonlite)	##needed for HGNC requests
############################################
############################################
## define HGNC functions
hgnc_id_from_prevsymbol <- function(symbol_input)  {
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/prev_symbol/", symbol_input))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) symbol else "") %>%
mutate(score = if (exists('score', where = hgnc_id_from_symbol)) score else 0) %>%
arrange(desc(score)) %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return(as.integer(hgnc_id_from_symbol$hgnc_id[1]))
}
hgnc_id_from_aliassymbol <- function(symbol_input)  {
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/alias_symbol/", symbol_input))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) symbol else "") %>%
mutate(score = if (exists('score', where = hgnc_id_from_symbol)) score else 0) %>%
arrange(desc(score)) %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return(as.integer(hgnc_id_from_symbol$hgnc_id[1]))
}
hgnc_id_from_symbol <- function(symbol_tibble) {
symbol_list_tibble <- as_tibble(symbol_tibble) %>% select(symbol = value) %>% mutate(symbol = toupper(symbol))
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/symbol/", str_c(symbol_list_tibble$symbol, collapse = "+OR+")))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) toupper(symbol) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- symbol_list_tibble %>%
left_join(hgnc_id_from_symbol, by = "symbol") %>%
select(hgnc_id)
return(return_tibble)
}
symbol_from_hgnc_id <- function(hgnc_id_tibble) {
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>%
select(hgnc_id = value) %>%
mutate(hgnc_id = as.integer(hgnc_id))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return(return_tibble)
}
hgnc_id_from_symbol_grouped <- function(input_tibble, request_max = 150) {
input_tibble <- as_tibble(input_tibble)
row_number <- nrow(input_tibble)
groups_number <- ceiling(row_number/request_max)
input_tibble_request <- input_tibble %>%
mutate(group = sample(1:groups_number, row_number, replace=T)) %>%
group_by(group) %>%
mutate(response = hgnc_id_from_symbol(value)$hgnc_id) %>%
ungroup()
input_tibble_request_repair <- input_tibble_request %>%
filter(is.na(response)) %>%
select(value) %>%
unique() %>%
rowwise() %>%
mutate(response = hgnc_id_from_prevsymbol(value)) %>%
mutate(response = case_when(!is.na(response) ~ response, is.na(response) ~ hgnc_id_from_aliassymbol(value)))
input_tibble_request <- input_tibble_request %>%
left_join(input_tibble_request_repair, by = "value") %>%
mutate(response = case_when(!is.na(response.x) ~ response.x, is.na(response.x) ~ response.y))
return(input_tibble_request$response)
}
############################################
hgnc_id_from_symbol_grouped("NAA10")
symbol_from_hgnc_id("18704")
install.packages('DiagrammeR')
setwd("C:/development/sysndd/api")
# sysndd_plumber.R
##-------------------------------------------------------------------##
# load libraries
library(plumber)
library(tidyverse)
library(DBI)
library(RMariaDB)
library(jsonlite)
library(config)
library(jose)
library(plotly)
library(RCurl)
##-------------------------------------------------------------------##
dw <- config::get("sysndd_db_local")
?searchdist
library(stringdist)
sysndd_db <- dbConnect(RMariaDB::MariaDB(), dbname = dw$dbname, user = dw$user, password = dw$password, server = dw$server, host = dw$host, port = dw$port)
sysndd_db_disease_table <- tbl(sysndd_db, "ndd_entity_view")
searchterm <- "1755"
sysndd_db_disease_collected <- sysndd_db_disease_table %>%
arrange(entity_id) %>%
collect() %>%
mutate(ndd_phenotype = case_when(
ndd_phenotype == 1 ~ "Yes",
ndd_phenotype == 0 ~ "No"
)) %>%
select(entity_id, hgnc_id, symbol, disease_ontology_id_version, disease_ontology_name) %>%
mutate(entity = as.character(entity_id)) %>%
pivot_longer(!entity_id, names_to = "search", values_to = "value") %>%
mutate(searchdist = stringdist(str_to_lower(value), str_to_lower(searchterm), method='jw', p=0.1)) %>%
arrange(searchdist, value) %>%
slice_head(n=10)
View(sysndd_db_disease_collected )
sysndd_db_entity_search <- tbl(sysndd_db, "ndd_entity_view") %>%
arrange(entity_id) %>%
collect() %>%
mutate(ndd_phenotype = case_when(
ndd_phenotype == 1 ~ "Yes",
ndd_phenotype == 0 ~ "No"
)) %>%
select(entity_id, hgnc_id, symbol, disease_ontology_id_version, disease_ontology_name) %>%
mutate(entity = as.character(entity_id)) %>%
pivot_longer(!entity_id, names_to = "search", values_to = "value") %>%
mutate(searchdist = stringdist(str_to_lower(value), str_to_lower(searchterm), method='jw', p=0.1)) %>%
arrange(searchdist, value)
sysndd_db_entity_search$searchdist[1]
sysndd_db_entity_search$searchdist[1]==0
?top_n
sysndd_db_entity_search$searchdist %>% slice_head(1)
sysndd_db_entity_search$searchdist %>% slice_head(n=1)
sysndd_db_entity_search %>% slice_head(n=1)
sysndd_db_entity_search_return <- case_when(
sysndd_db_entity_search$searchdist[1] == 0 ~ sysndd_db_entity_search %>% slice_head(n=1),
sysndd_db_entity_search$searchdist[1] > 0 ~ sysndd_db_entity_search %>% slice_head(n=1)
)
sysndd_db <- dbConnect(RMariaDB::MariaDB(), dbname = dw$dbname, user = dw$user, password = dw$password, server = dw$server, host = dw$host, port = dw$port)
sysndd_db_entity_search <- tbl(sysndd_db, "ndd_entity_view") %>%
arrange(entity_id) %>%
collect() %>%
mutate(ndd_phenotype = case_when(
ndd_phenotype == 1 ~ "Yes",
ndd_phenotype == 0 ~ "No"
)) %>%
select(entity_id, hgnc_id, symbol, disease_ontology_id_version, disease_ontology_name) %>%
mutate(entity = as.character(entity_id)) %>%
pivot_longer(!entity_id, names_to = "search", values_to = "value") %>%
mutate(searchdist = stringdist(str_to_lower(value), str_to_lower(searchterm), method='jw', p=0.1)) %>%
arrange(searchdist, value)
# disconnect from database
dbDisconnect(sysndd_db)
sysndd_db_entity_search$searchdist[1] == 0
sysndd_db_entity_search$searchdist[1] > 0
sysndd_db_entity_search_return <- case_when(
sysndd_db_entity_search$searchdist[1] == 0 ~ sysndd_db_entity_search %>% slice_head(n=1),
sysndd_db_entity_search$searchdist[1] > 0 ~ sysndd_db_entity_search %>% slice_head(n=1)
)
if (sysndd_db_entity_search$searchdist[1] == 0) {
sysndd_db_entity_search_return <- sysndd_db_entity_search %>% slice_head(n=1)
} else {
sysndd_db_entity_search_return <- sysndd_db_entity_search %>% slice_head(n=10)
}
sysndd_db_entity_search_return
searchterm <- "1755"
sysndd_db_disease_collected <- sysndd_db_disease_table %>%
arrange(entity_id) %>%
collect() %>%
mutate(ndd_phenotype = case_when(
ndd_phenotype == 1 ~ "Yes",
ndd_phenotype == 0 ~ "No"
)) %>%
select(entity_id, hgnc_id, symbol, disease_ontology_id_version, disease_ontology_name) %>%
mutate(entity = as.character(entity_id)) %>%
pivot_longer(!entity_id, names_to = "search", values_to = "value") %>%
mutate(searchdist = stringdist(str_to_lower(value), str_to_lower(searchterm), method='jw', p=0.1)) %>%
arrange(searchdist, value) %>%
slice_head(n=10)
View(sysndd_db_disease_collected )
searchterm <- "NAA1"
sysndd_db_disease_collected <- sysndd_db_disease_table %>%
arrange(entity_id) %>%
collect() %>%
mutate(ndd_phenotype = case_when(
ndd_phenotype == 1 ~ "Yes",
ndd_phenotype == 0 ~ "No"
)) %>%
select(entity_id, hgnc_id, symbol, disease_ontology_id_version, disease_ontology_name) %>%
mutate(entity = as.character(entity_id)) %>%
pivot_longer(!entity_id, names_to = "search", values_to = "value") %>%
mutate(searchdist = stringdist(str_to_lower(value), str_to_lower(searchterm), method='jw', p=0.1)) %>%
arrange(searchdist, value) %>%
slice_head(n=10)
sysndd_db_disease_collected %>% select(-entity_id) %>% unique()
sysndd_db_disease_collected %>% select(-entity_id) %>% unique()
sysndd_db_disease_collected %>% select(-entity_id) %>% unique() %>% select(value)
sysndd_db_disease_collected %>% select(-entity_id) %>% unique() %>% select(value) %>% as.list()
(sysndd_db_disease_collected %>% select(-entity_id) %>% unique() %>% select(value) %>% as.list())$value
sysndd_db_entity_search_helper %>%
filter(searchdist < 0.1)
if (helper) {
sysndd_db_entity_search_helper <- sysndd_db_entity_search %>%
select(-entity_id) %>%
unique()
} else {
sysndd_db_entity_search_helper <- sysndd_db_entity_search
}
##-------------------------------------------------------------------##
# load libraries
library(plumber)
library(tidyverse)
library(DBI)
library(RMariaDB)
library(jsonlite)
library(config)
library(jose)
library(plotly)
library(RCurl)
library(stringdist)
##-------------------------------------------------------------------##
##-------------------------------------------------------------------##
dw <- config::get("sysndd_db_local")
##-------------------------------------------------------------------##
searchterm <- "NAA10"
searchterm <- URLdecode(searchterm) %>%
str_squish()
# get data from database and filter
sysndd_db <- dbConnect(RMariaDB::MariaDB(), dbname = dw$dbname, user = dw$user, password = dw$password, server = dw$server, host = dw$host, port = dw$port)
sysndd_db_entity_search <- tbl(sysndd_db, "ndd_entity_view") %>%
arrange(entity_id) %>%
collect() %>%
mutate(ndd_phenotype = case_when(
ndd_phenotype == 1 ~ "Yes",
ndd_phenotype == 0 ~ "No"
)) %>%
select(entity_id, hgnc_id, symbol, disease_ontology_id_version, disease_ontology_name) %>%
mutate(entity = as.character(entity_id)) %>%
pivot_longer(!entity_id, names_to = "search", values_to = "results") %>%
mutate(search = str_replace(search, "entity", "entity_id")) %>%
mutate(searchdist = stringdist(str_to_lower(results), str_to_lower(searchterm), method='jw', p=0.1)) %>%
arrange(searchdist, results)
# disconnect from database
dbDisconnect(sysndd_db)
# change output by helper input to unique values (helper = TRUE) or entities (helper = FALSE)
if (helper) {
sysndd_db_entity_search_helper <- sysndd_db_entity_search %>%
select(-entity_id) %>%
unique()
} else {
sysndd_db_entity_search_helper <- sysndd_db_entity_search
}
# compute filtered length with match < 0.1
sysndd_db_entity_search_length <- sysndd_db_entity_search_helper %>%
filter(searchdist < 0.1)
searchterm <- URLdecode(searchterm) %>%
str_squish()
# get data from database and filter
sysndd_db <- dbConnect(RMariaDB::MariaDB(), dbname = dw$dbname, user = dw$user, password = dw$password, server = dw$server, host = dw$host, port = dw$port)
sysndd_db_entity_search <- tbl(sysndd_db, "ndd_entity_view") %>%
arrange(entity_id) %>%
collect() %>%
mutate(ndd_phenotype = case_when(
ndd_phenotype == 1 ~ "Yes",
ndd_phenotype == 0 ~ "No"
)) %>%
select(entity_id, hgnc_id, symbol, disease_ontology_id_version, disease_ontology_name) %>%
mutate(entity = as.character(entity_id)) %>%
pivot_longer(!entity_id, names_to = "search", values_to = "results") %>%
mutate(search = str_replace(search, "entity", "entity_id")) %>%
mutate(searchdist = stringdist(str_to_lower(results), str_to_lower(searchterm), method='jw', p=0.1)) %>%
arrange(searchdist, results)
# disconnect from database
dbDisconnect(sysndd_db)
# change output by helper input to unique values (helper = TRUE) or entities (helper = FALSE)
if (helper) {
sysndd_db_entity_search_helper <- sysndd_db_entity_search %>%
select(-entity_id) %>%
unique()
} else {
sysndd_db_entity_search_helper <- sysndd_db_entity_search
}
helper = TRUE
searchterm <- URLdecode(searchterm) %>%
str_squish()
# get data from database and filter
sysndd_db <- dbConnect(RMariaDB::MariaDB(), dbname = dw$dbname, user = dw$user, password = dw$password, server = dw$server, host = dw$host, port = dw$port)
sysndd_db_entity_search <- tbl(sysndd_db, "ndd_entity_view") %>%
arrange(entity_id) %>%
collect() %>%
mutate(ndd_phenotype = case_when(
ndd_phenotype == 1 ~ "Yes",
ndd_phenotype == 0 ~ "No"
)) %>%
select(entity_id, hgnc_id, symbol, disease_ontology_id_version, disease_ontology_name) %>%
mutate(entity = as.character(entity_id)) %>%
pivot_longer(!entity_id, names_to = "search", values_to = "results") %>%
mutate(search = str_replace(search, "entity", "entity_id")) %>%
mutate(searchdist = stringdist(str_to_lower(results), str_to_lower(searchterm), method='jw', p=0.1)) %>%
arrange(searchdist, results)
# disconnect from database
dbDisconnect(sysndd_db)
# change output by helper input to unique values (helper = TRUE) or entities (helper = FALSE)
if (helper) {
sysndd_db_entity_search_helper <- sysndd_db_entity_search %>%
select(-entity_id) %>%
unique()
} else {
sysndd_db_entity_search_helper <- sysndd_db_entity_search
}
sysndd_db_entity_search_length <- sysndd_db_entity_search_helper %>%
filter(searchdist < 0.1)
sysndd_db_entity_search_length
sysndd_db_entity_search_length %>% taly()
sysndd_db_entity_search_length %>% tally()
