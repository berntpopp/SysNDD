grin_data_all[1]
grin_data_all[2]
grin_data_all[3]
grin_data_all[4]
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(table_fisher$p.value, table_binom$p.value)
}
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(table_fisher$p.value, table_binom$p.value))
}
calculate_p_values(grin_data_all)
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(paste0(Fisher p-value: ",table_fisher$p.value), paste0(Bionominal p-value: ",table_binom$p.value)))
}
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(paste0(Fisher p-value: ",table_fisher$p.value), paste0(Bionominal p-value: ",table_binom$p.value)))
}
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(paste0("Fisher p-value: ",table_fisher$p.value), paste0("Bionominal p-value: ",table_binom$p.value)))
}
calculate_p_values(grin_data_all)
############################################
## enter your count data here
missense_all <- 38
missense_psych <- 2
lof_all <- 83
lof_psych <- 22
############################################
############################################
## function definitions
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(paste0("Fisher p-value: ",table_fisher$p.value), paste0("Bionominal p-value: ",table_binom$p.value)))
}
############################################
############################################
## merge table
grin_data_all <- rbind(c(missense_psych, missense_all), c(lof_psych, lof_all))
############################################
############################################
## calculate p-values
calculate_p_values(grin_data_all)
############################################
## 2021-04-13
############################################
## enter your count data here
missense_all <- 38
missense_psych <- 2
lof_all <- 83
lof_psych <- 22
############################################
############################################
## function definitions
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(paste0("Fisher p-value: ",table_fisher$p.value), paste0("Bionominal p-value: ",table_binom$p.value)))
}
############################################
############################################
## merge table
grin_data_all <- rbind(c(missense_psych, missense_all), c(lof_psych, lof_all))
############################################
############################################
## calculate p-values
calculate_p_values(grin_data_all)
############################################
############################################
## load libraries
## to do: change to DBI/RMariaDB, have to automate connection using yml file
library(tidyverse)	##needed for general table operations
library(jsonlite)	##needed for HGNC requests
library(DBI)		##needed for MySQL data export
library(RMariaDB)	##needed for MySQL data export
library(sqlr)		##needed for MySQL data export
############################################
############################################
## define functions
hgnc_id_from_prevsymbol <- function(symbol_input)  {
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/prev_symbol/", symbol_input))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) symbol else "") %>%
mutate(score = if (exists('score', where = hgnc_id_from_symbol)) score else 0) %>%
arrange(desc(score)) %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return(as.integer(hgnc_id_from_symbol$hgnc_id[1]))
}
hgnc_id_from_aliassymbol <- function(symbol_input)  {
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/alias_symbol/", symbol_input))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) symbol else "") %>%
mutate(score = if (exists('score', where = hgnc_id_from_symbol)) score else 0) %>%
arrange(desc(score)) %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return(as.integer(hgnc_id_from_symbol$hgnc_id[1]))
}
hgnc_id_from_symbol <- function(symbol_tibble) {
symbol_list_tibble <- as_tibble(symbol_tibble) %>% select(symbol = value) %>% mutate(symbol = toupper(symbol))
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/symbol/", str_c(symbol_list_tibble$symbol, collapse = "+OR+")))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) toupper(symbol) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- symbol_list_tibble %>%
left_join(hgnc_id_from_symbol, by = "symbol") %>%
select(hgnc_id)
return(return_tibble)
}
hgnc_id_from_symbol_grouped <- function(input_tibble, request_max = 150) {
input_tibble <- as_tibble(input_tibble)
row_number <- nrow(input_tibble)
groups_number <- ceiling(row_number/request_max)
input_tibble_request <- input_tibble %>%
mutate(group = sample(1:groups_number, row_number, replace=T)) %>%
group_by(group) %>%
mutate(response = hgnc_id_from_symbol(value)$hgnc_id) %>%
ungroup()
input_tibble_request_repair <- input_tibble_request %>%
filter(is.na(response)) %>%
select(value) %>%
unique() %>%
rowwise() %>%
mutate(response = hgnc_id_from_prevsymbol(value)) %>%
mutate(response = case_when(!is.na(response) ~ response, is.na(response) ~ hgnc_id_from_aliassymbol(value)))
input_tibble_request <- input_tibble_request %>%
left_join(input_tibble_request_repair, by = "value") %>%
mutate(response = case_when(!is.na(response.x) ~ response.x, is.na(response.x) ~ response.y))
return(input_tibble_request$response)
}
hgnc_id_from_symbol_grouped("NAA10")
hgnc_id_from_symbol_grouped("NAT1")
hgnc_id_from_symbol_grouped("ARD1")
symbol_from_hgnc_id <- function(hgnc_id_tibble) {
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>% select(hgnc_id = value) %>% mutate(hgnc_id = toupper(hgnc_id))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(hgnc_id)
return(return_tibble)
}
symbol_from_hgnc_id("18704")
hgnc_id_tibble <- "18704"
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>% select(hgnc_id = value) %>% mutate(hgnc_id = toupper(hgnc_id))
hgnc_id_list_tibble
fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id
hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(hgnc_id)
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return_tibble
hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id")
hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.character(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return_tibble
hgnc_id_from_hgnc_id
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>%
select(hgnc_id = value) %>%
mutate(hgnc_id = as.integer(hgnc_id))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return_tibble
symbol_from_hgnc_id <- function(hgnc_id_tibble) {
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>%
select(hgnc_id = value) %>%
mutate(hgnc_id = as.integer(hgnc_id))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return(return_tibble)
}
symbol_from_hgnc_id("NAA10")
symbol_from_hgnc_id("1753")
symbol_from_hgnc_id("18704")
symbol_from_hgnc_id(c("18704", "1753"))
############################################
## load libraries
library(tidyverse)	##needed for general table operations
library(jsonlite)	##needed for HGNC requests
############################################
############################################
## define HGNC functions
hgnc_id_from_prevsymbol <- function(symbol_input)  {
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/prev_symbol/", symbol_input))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) symbol else "") %>%
mutate(score = if (exists('score', where = hgnc_id_from_symbol)) score else 0) %>%
arrange(desc(score)) %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return(as.integer(hgnc_id_from_symbol$hgnc_id[1]))
}
hgnc_id_from_aliassymbol <- function(symbol_input)  {
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/alias_symbol/", symbol_input))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) symbol else "") %>%
mutate(score = if (exists('score', where = hgnc_id_from_symbol)) score else 0) %>%
arrange(desc(score)) %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return(as.integer(hgnc_id_from_symbol$hgnc_id[1]))
}
hgnc_id_from_symbol <- function(symbol_tibble) {
symbol_list_tibble <- as_tibble(symbol_tibble) %>% select(symbol = value) %>% mutate(symbol = toupper(symbol))
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/symbol/", str_c(symbol_list_tibble$symbol, collapse = "+OR+")))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) toupper(symbol) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- symbol_list_tibble %>%
left_join(hgnc_id_from_symbol, by = "symbol") %>%
select(hgnc_id)
return(return_tibble)
}
symbol_from_hgnc_id <- function(hgnc_id_tibble) {
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>%
select(hgnc_id = value) %>%
mutate(hgnc_id = as.integer(hgnc_id))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return(return_tibble)
}
hgnc_id_from_symbol_grouped <- function(input_tibble, request_max = 150) {
input_tibble <- as_tibble(input_tibble)
row_number <- nrow(input_tibble)
groups_number <- ceiling(row_number/request_max)
input_tibble_request <- input_tibble %>%
mutate(group = sample(1:groups_number, row_number, replace=T)) %>%
group_by(group) %>%
mutate(response = hgnc_id_from_symbol(value)$hgnc_id) %>%
ungroup()
input_tibble_request_repair <- input_tibble_request %>%
filter(is.na(response)) %>%
select(value) %>%
unique() %>%
rowwise() %>%
mutate(response = hgnc_id_from_prevsymbol(value)) %>%
mutate(response = case_when(!is.na(response) ~ response, is.na(response) ~ hgnc_id_from_aliassymbol(value)))
input_tibble_request <- input_tibble_request %>%
left_join(input_tibble_request_repair, by = "value") %>%
mutate(response = case_when(!is.na(response.x) ~ response.x, is.na(response.x) ~ response.y))
return(input_tibble_request$response)
}
############################################
hgnc_id_from_symbol_grouped("NAA10")
symbol_from_hgnc_id("18704")
install.packages('DiagrammeR')
gene_coordinates_from_symbol_list <- function(gene_symbols) {
gene_symbol_list <- unlist(str_split(gene_symbols, pattern=", "))
mart <- useMart("ensembl", host="grch37.ensembl.org")
mart <- useDataset("hsapiens_gene_ensembl", mart)
attributes <- attributes <- c("chromosome_name", "start_position", "end_position")
filters <- c("hgnc_symbol")
values <- list(hgnc_symbol = gene_symbol_list)
cnv_coordinates <- getBM(attributes=attributes, filters=filters, values=values, mart=mart) %>%
filter(chromosome_name %in% c("1","2","3","4","5","6","7","8","9","11","12","13","14","15","16","17","18","19","20","21","22","X","Y","M")) %>%
group_by(chromosome_name) %>%
summarise(genomicBegin = min(start_position), genomicEnd = min(end_position)) %>%
ungroup() %>%
mutate(chromosome_name = paste0("chr", chromosome_name)) %>%
dplyr::select(chromosome = chromosome_name, genomicBegin, genomicEnd)
return(cnv_coordinates)
}
gene_coordinates_from_symbol_list("NAA10")
library(biomaRt)
library(tidyverse)
gene_coordinates_from_symbol_list("NAA10")
??useEnsembl
gene_coordinates_from_symbol_list <- function(gene_symbols) {
gene_symbol_list <- unlist(str_split(gene_symbols, pattern=", "))
mart <- useMart("ensembl", host="http://uswest.ensembl.org")
mart <- useDataset("hsapiens_gene_ensembl", mart)
attributes <- attributes <- c("chromosome_name", "start_position", "end_position")
filters <- c("hgnc_symbol")
values <- list(hgnc_symbol = gene_symbol_list)
cnv_coordinates <- getBM(attributes=attributes, filters=filters, values=values, mart=mart) %>%
filter(chromosome_name %in% c("1","2","3","4","5","6","7","8","9","11","12","13","14","15","16","17","18","19","20","21","22","X","Y","M")) %>%
group_by(chromosome_name) %>%
summarise(genomicBegin = min(start_position), genomicEnd = min(end_position)) %>%
ungroup() %>%
mutate(chromosome_name = paste0("chr", chromosome_name)) %>%
dplyr::select(chromosome = chromosome_name, genomicBegin, genomicEnd)
return(cnv_coordinates)
}
gene_coordinates_from_symbol_list("NAA10")
gene_symbols <- "NAA10"
gene_symbol_list <- unlist(str_split(gene_symbols, pattern=", "))
mart <- useMart("ensembl", host="uswest.ensembl.org")
mart <- useDataset("hsapiens_gene_ensembl", mart)
mart
filters <- c("hgnc_symbol")
filters
gene_symbols
gene_symbol_list
gene_symbols <- "NAA10 GRIN2B"
gene_symbols <- "NAA10, GRIN2B"
gene_symbol_list <- unlist(str_split(gene_symbols, pattern=", "))
gene_symbol_list
filters <- c("hgnc_symbol")
values <- list(hgnc_symbol = gene_symbol_list)
cnv_coordinates <- getBM(attributes=attributes, filters=filters, values=values, mart=mart) %>%
filter(chromosome_name %in% c("1","2","3","4","5","6","7","8","9","11","12","13","14","15","16","17","18","19","20","21","22","X","Y","M")) %>%
group_by(chromosome_name) %>%
summarise(genomicBegin = min(start_position), genomicEnd = min(end_position)) %>%
ungroup() %>%
mutate(chromosome_name = paste0("chr", chromosome_name)) %>%
dplyr::select(chromosome = chromosome_name, genomicBegin, genomicEnd)
getBM(attributes=attributes, filters=filters, values=values, mart=mart)
?getBM
getBM(attributes = c("affy_hg_u95av2", "hgnc_symbol", "chromosome_name", "band"),
filters    = "affy_hg_u95av2",
values     = c("1939_at","1503_at","1454_at"),
mart       = mart)
BiocManager::install("biomaRt")
BiocManager::install("biomaRt")
library(tidyverse)
library(biomaRt)
##-------------------------------------------------------------------------------##
## functions to get gene coordinates from symbol name using biomart
gene_coordinates_from_symbol_list <- function(gene_symbols) {
gene_symbol_list <- unlist(str_split(gene_symbols, pattern=", "))
mart <- useMart("ensembl", host="uswest.ensembl.org")
mart <- useDataset("hsapiens_gene_ensembl", mart)
attributes <- attributes <- c("chromosome_name", "start_position", "end_position")
filters <- c("hgnc_symbol")
values <- list(hgnc_symbol = gene_symbol_list)
cnv_coordinates <- getBM(attributes=attributes, filters=filters, values=values, mart=mart) %>%
filter(chromosome_name %in% c("1","2","3","4","5","6","7","8","9","11","12","13","14","15","16","17","18","19","20","21","22","X","Y","M")) %>%
group_by(chromosome_name) %>%
summarise(genomicBegin = min(start_position), genomicEnd = min(end_position)) %>%
ungroup() %>%
mutate(chromosome_name = paste0("chr", chromosome_name)) %>%
dplyr::select(chromosome = chromosome_name, genomicBegin, genomicEnd)
return(cnv_coordinates)
}
##-------------------------------------------------------------------------------##
gene_coordinates_from_symbol_list("NAA10")
library(biomaRt)
##-------------------------------------------------------------------------------##
## functions to get gene coordinates from symbol name using biomart
gene_coordinates_from_symbol_list <- function(gene_symbols) {
gene_symbol_list <- unlist(str_split(gene_symbols, pattern=", "))
mart <- useMart("ensembl", host="useast.ensembl.org")
mart <- useDataset("hsapiens_gene_ensembl", mart)
attributes <- attributes <- c("chromosome_name", "start_position", "end_position")
filters <- c("hgnc_symbol")
values <- list(hgnc_symbol = gene_symbol_list)
cnv_coordinates <- getBM(attributes=attributes, filters=filters, values=values, mart=mart) %>%
filter(chromosome_name %in% c("1","2","3","4","5","6","7","8","9","11","12","13","14","15","16","17","18","19","20","21","22","X","Y","M")) %>%
group_by(chromosome_name) %>%
summarise(genomicBegin = min(start_position), genomicEnd = min(end_position)) %>%
ungroup() %>%
mutate(chromosome_name = paste0("chr", chromosome_name)) %>%
dplyr::select(chromosome = chromosome_name, genomicBegin, genomicEnd)
return(cnv_coordinates)
}
##-------------------------------------------------------------------------------##
gene_coordinates_from_symbol_list("NAA10")
library(biomaRt)
##-------------------------------------------------------------------------------##
## functions to get gene coordinates from symbol name using biomart
gene_coordinates_from_symbol_list <- function(gene_symbols) {
gene_symbol_list <- unlist(str_split(gene_symbols, pattern=", "))
mart <- useMart("ensembl", host="http://uswest.ensembl.org/biomart/")
mart <- useDataset("hsapiens_gene_ensembl", mart)
attributes <- attributes <- c("chromosome_name", "start_position", "end_position")
filters <- c("hgnc_symbol")
values <- list(hgnc_symbol = gene_symbol_list)
cnv_coordinates <- getBM(attributes=attributes, filters=filters, values=values, mart=mart) %>%
filter(chromosome_name %in% c("1","2","3","4","5","6","7","8","9","11","12","13","14","15","16","17","18","19","20","21","22","X","Y","M")) %>%
group_by(chromosome_name) %>%
summarise(genomicBegin = min(start_position), genomicEnd = min(end_position)) %>%
ungroup() %>%
mutate(chromosome_name = paste0("chr", chromosome_name)) %>%
dplyr::select(chromosome = chromosome_name, genomicBegin, genomicEnd)
return(cnv_coordinates)
}
gene_coordinates_from_symbol_list("NAA10")
library(biomaRt)
##-------------------------------------------------------------------------------##
## functions to get gene coordinates from symbol name using biomart
gene_coordinates_from_symbol_list <- function(gene_symbols) {
gene_symbol_list <- unlist(str_split(gene_symbols, pattern=", "))
mart <- useMart("ensembl", host="http://uswest.ensembl.org/biomart/martview/50ce7b81491af480fae0d0189a5e9378)
mart <- useDataset("hsapiens_gene_ensembl", mart)
attributes <- attributes <- c("chromosome_name", "start_position", "end_position")
filters <- c("hgnc_symbol")
values <- list(hgnc_symbol = gene_symbol_list)
cnv_coordinates <- getBM(attributes=attributes, filters=filters, values=values, mart=mart) %>%
filter(chromosome_name %in% c("1","2","3","4","5","6","7","8","9","11","12","13","14","15","16","17","18","19","20","21","22","X","Y","M")) %>%
group_by(chromosome_name) %>%
summarise(genomicBegin = min(start_position), genomicEnd = min(end_position)) %>%
ungroup() %>%
mutate(chromosome_name = paste0("chr", chromosome_name)) %>%
dplyr::select(chromosome = chromosome_name, genomicBegin, genomicEnd)
return(cnv_coordinates)
}
##-------------------------------------------------------------------------------##
library(biomaRt)
##-------------------------------------------------------------------------------##
## functions to get gene coordinates from symbol name using biomart
gene_coordinates_from_symbol_list <- function(gene_symbols) {
gene_symbol_list <- unlist(str_split(gene_symbols, pattern=", "))
mart <- useMart("ensembl", host="http://uswest.ensembl.org/biomart/martview/50ce7b81491af480fae0d0189a5e9378")
mart <- useDataset("hsapiens_gene_ensembl", mart)
attributes <- attributes <- c("chromosome_name", "start_position", "end_position")
filters <- c("hgnc_symbol")
values <- list(hgnc_symbol = gene_symbol_list)
cnv_coordinates <- getBM(attributes=attributes, filters=filters, values=values, mart=mart) %>%
filter(chromosome_name %in% c("1","2","3","4","5","6","7","8","9","11","12","13","14","15","16","17","18","19","20","21","22","X","Y","M")) %>%
group_by(chromosome_name) %>%
summarise(genomicBegin = min(start_position), genomicEnd = min(end_position)) %>%
ungroup() %>%
mutate(chromosome_name = paste0("chr", chromosome_name)) %>%
dplyr::select(chromosome = chromosome_name, genomicBegin, genomicEnd)
return(cnv_coordinates)
}
##-------------------------------------------------------------------------------##
gene_coordinates_from_symbol_list("NAA10")
??listMarts
?listMarts
listMarts()
listMarts(host="www.ensembl.org")
listMarts(host="uswest.ensembl.org")
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
