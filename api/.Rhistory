date_revision <- genereviews_request %>%
html_nodes(xpath = "//div[contains(h3, 'Revision History')]") %>%
str_replace_all("<.+?>", "") %>%
str_replace_all("\n", " ") %>%
str_replace_all("Revision History", "") %>%
str_replace_all("Review posted live", "") %>%
str_replace_all("\\(.+", "") %>%
str_squish()
authors <- genereviews_request %>%
html_nodes("div") %>%
html_nodes("[itemprop='author']")
first_author <- authors[1] %>%
str_replace_all("<.+?>", "") %>%
str_squish()
keywords <- genereviews_request %>%
html_nodes("[name='citation_keywords']") %>%
html_attr('content') %>%
str_c(collapse = "; ")
return_tibble <- as_tibble_row(c("publication_id" = pmid, "Bookshelf_ID" = Bookshelf_ID, "Title" = title, "Abstract" = abstract, "Date" = date_revision, "First_author" = first_author, "Keywords" = keywords)) %>%
separate(Date, c("Day", "Month", "Year"), sep = " ") %>%
mutate(Month = match(Month, month.name)) %>%
separate(First_author, c("Firstname", "Lastname") , sep = " (?=[^ ]*$)", extra = "merge") %>%
mutate(Journal_abbreviation = "GeneReviews") %>%
mutate(Journal = "GeneReviews") %>%
mutate(Keywords = "GeneReviews") %>%
select(publication_id, Bookshelf_ID, Title, Abstract, Year, Month, Day, Journal_abbreviation, Journal, Keywords, Lastname, Firstname)
close(genereviews_url)
return(return_tibble)
}
info_from_genereviews("NBK541502")
info_from_genereviews <- function(Bookshelf_ID)  {
genereviews_url <- paste0("https://www.ncbi.nlm.nih.gov/books/", Bookshelf_ID)
genereviews_url = url(genereviews_url, "rb")
genereviews_request <- xml2::read_html(genereviews_url, options = "RECOVER")
pmid <- genereviews_request %>%
html_nodes("div.small") %>%
html_nodes("span.label") %>%
html_nodes("a") %>%
html_attr('href') %>%
str_replace("/pubmed/", "") %>%
str_replace("/", "")
title <- genereviews_request %>%
html_nodes("title") %>%
str_replace_all("title", "") %>%
str_replace_all("\\/", "") %>%
str_replace_all("<>", "") %>%
str_replace_all(" -.+", "")
abstract <- genereviews_request %>%
html_nodes(xpath = "//div[contains(h2, 'Summary')]") %>%
str_replace_all("<.+?>", "") %>%
str_replace_all("\n", " ") %>%
str_squish()
date_revision <- genereviews_request %>%
html_nodes(xpath = "//div[contains(h3, 'Revision History')]") %>%
str_replace_all("<.+?>", "") %>%
str_replace_all("\n", " ") %>%
str_replace_all("Revision History", "") %>%
str_replace_all("Review posted live", "") %>%
str_replace_all("\\(.+", "") %>%
str_squish()
authors <- genereviews_request %>%
html_nodes("div") %>%
html_nodes("[itemprop='author']")
first_author <- authors[1] %>%
str_replace_all("<.+?>", "") %>%
str_squish()
keywords <- genereviews_request %>%
html_nodes("[name='citation_keywords']") %>%
html_attr('content') %>%
str_c(collapse = "; ")
return_tibble <- as_tibble_row(c("publication_id" = pmid, "Bookshelf_ID" = Bookshelf_ID, "Title" = title, "Abstract" = abstract, "Date" = date_revision, "First_author" = first_author, "Keywords" = keywords)) %>%
separate(Date, c("Day", "Month", "Year"), sep = " ") %>%
mutate(Month = match(Month, month.name)) %>%
separate(First_author, c("Firstname", "Lastname") , sep = " (?=[^ ]*$)", extra = "merge") %>%
mutate(Journal_abbreviation = "GeneReviews") %>%
mutate(Journal = "GeneReviews") %>%
select(publication_id, Bookshelf_ID, Title, Abstract, Year, Month, Day, Journal_abbreviation, Journal, Keywords, Lastname, Firstname)
close(genereviews_url)
return(return_tibble)
}
info_from_genereviews("NBK541502")
ndd_entity_publication_is_gene_review <- ndd_entity_publications %>%
select(publication_id, publication_type) %>%
filter(publication_type == "gene_review") %>%
arrange(publication_id) %>%
unique() %>%
rowwise() %>%
mutate(info_from_genereviews = info_from_genereviews(publication_id))
binom.test(2, 36, p = 24/121, alternative = c("less"), conf.level = 0.95)
grin_data_all <- rbind(c(2,38), c(22,83))
fisher.test(grin_data_all, alternative = "less")
binom.test(2, 38, p = 24/121, alternative = c("less"), conf.level = 0.95)
binom.test(1, 38, p = 24/121, alternative = c("less"), conf.level = 0.95)
1/38
binom.test(2, 38, p = 24/121, alternative = c("less"), conf.level = 0.95)
missense_all <- 38
missense_psych <- 2
lof_all <- 83
lof_psych <- 22
grin_data_all <- rbind(c(missense_psych, missense_all), c(lof_psych, lof_all))
grin_data_all <- rbind(c(missense_psych, missense_all), c(lof_psych, lof_all))
fisher.test(grin_data_all, alternative = "less")
binom.test(2, 38, p = 24/121, alternative = c("less"), conf.level = 0.95)
test <- fisher.test(grin_data_all, alternative = "less")
test$p.value
grin_data_all_fisher <- fisher.test(grin_data_all, alternative = "less")
grin_data_all_binom <- binom.test(2, 38, p = 24/121, alternative = c("less"), conf.level = 0.95)
grin_data_all_binom $p.value
grin_data_all
grin_data_all[1]
grin_data_all[2]
grin_data_all[3]
grin_data_all[4]
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(table_fisher$p.value, table_binom$p.value)
}
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(table_fisher$p.value, table_binom$p.value))
}
calculate_p_values(grin_data_all)
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(paste0(Fisher p-value: ",table_fisher$p.value), paste0(Bionominal p-value: ",table_binom$p.value)))
}
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(paste0(Fisher p-value: ",table_fisher$p.value), paste0(Bionominal p-value: ",table_binom$p.value)))
}
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(paste0("Fisher p-value: ",table_fisher$p.value), paste0("Bionominal p-value: ",table_binom$p.value)))
}
calculate_p_values(grin_data_all)
############################################
## enter your count data here
missense_all <- 38
missense_psych <- 2
lof_all <- 83
lof_psych <- 22
############################################
############################################
## function definitions
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(paste0("Fisher p-value: ",table_fisher$p.value), paste0("Bionominal p-value: ",table_binom$p.value)))
}
############################################
############################################
## merge table
grin_data_all <- rbind(c(missense_psych, missense_all), c(lof_psych, lof_all))
############################################
############################################
## calculate p-values
calculate_p_values(grin_data_all)
############################################
## 2021-04-13
############################################
## enter your count data here
missense_all <- 38
missense_psych <- 2
lof_all <- 83
lof_psych <- 22
############################################
############################################
## function definitions
calculate_p_values <- function(table)
{
table_fisher <- fisher.test(table, alternative = "less")
table_binom <- binom.test(grin_data_all[1], grin_data_all[3], p = (table[1]+table[2])/(table[3]+table[4]), alternative = c("less"), conf.level = 0.95)
return(c(paste0("Fisher p-value: ",table_fisher$p.value), paste0("Bionominal p-value: ",table_binom$p.value)))
}
############################################
############################################
## merge table
grin_data_all <- rbind(c(missense_psych, missense_all), c(lof_psych, lof_all))
############################################
############################################
## calculate p-values
calculate_p_values(grin_data_all)
############################################
############################################
## load libraries
## to do: change to DBI/RMariaDB, have to automate connection using yml file
library(tidyverse)	##needed for general table operations
library(jsonlite)	##needed for HGNC requests
library(DBI)		##needed for MySQL data export
library(RMariaDB)	##needed for MySQL data export
library(sqlr)		##needed for MySQL data export
############################################
############################################
## define functions
hgnc_id_from_prevsymbol <- function(symbol_input)  {
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/prev_symbol/", symbol_input))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) symbol else "") %>%
mutate(score = if (exists('score', where = hgnc_id_from_symbol)) score else 0) %>%
arrange(desc(score)) %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return(as.integer(hgnc_id_from_symbol$hgnc_id[1]))
}
hgnc_id_from_aliassymbol <- function(symbol_input)  {
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/alias_symbol/", symbol_input))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) symbol else "") %>%
mutate(score = if (exists('score', where = hgnc_id_from_symbol)) score else 0) %>%
arrange(desc(score)) %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return(as.integer(hgnc_id_from_symbol$hgnc_id[1]))
}
hgnc_id_from_symbol <- function(symbol_tibble) {
symbol_list_tibble <- as_tibble(symbol_tibble) %>% select(symbol = value) %>% mutate(symbol = toupper(symbol))
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/symbol/", str_c(symbol_list_tibble$symbol, collapse = "+OR+")))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) toupper(symbol) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- symbol_list_tibble %>%
left_join(hgnc_id_from_symbol, by = "symbol") %>%
select(hgnc_id)
return(return_tibble)
}
hgnc_id_from_symbol_grouped <- function(input_tibble, request_max = 150) {
input_tibble <- as_tibble(input_tibble)
row_number <- nrow(input_tibble)
groups_number <- ceiling(row_number/request_max)
input_tibble_request <- input_tibble %>%
mutate(group = sample(1:groups_number, row_number, replace=T)) %>%
group_by(group) %>%
mutate(response = hgnc_id_from_symbol(value)$hgnc_id) %>%
ungroup()
input_tibble_request_repair <- input_tibble_request %>%
filter(is.na(response)) %>%
select(value) %>%
unique() %>%
rowwise() %>%
mutate(response = hgnc_id_from_prevsymbol(value)) %>%
mutate(response = case_when(!is.na(response) ~ response, is.na(response) ~ hgnc_id_from_aliassymbol(value)))
input_tibble_request <- input_tibble_request %>%
left_join(input_tibble_request_repair, by = "value") %>%
mutate(response = case_when(!is.na(response.x) ~ response.x, is.na(response.x) ~ response.y))
return(input_tibble_request$response)
}
hgnc_id_from_symbol_grouped("NAA10")
hgnc_id_from_symbol_grouped("NAT1")
hgnc_id_from_symbol_grouped("ARD1")
symbol_from_hgnc_id <- function(hgnc_id_tibble) {
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>% select(hgnc_id = value) %>% mutate(hgnc_id = toupper(hgnc_id))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(hgnc_id)
return(return_tibble)
}
symbol_from_hgnc_id("18704")
hgnc_id_tibble <- "18704"
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>% select(hgnc_id = value) %>% mutate(hgnc_id = toupper(hgnc_id))
hgnc_id_list_tibble
fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id
hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(hgnc_id)
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return_tibble
hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id")
hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.character(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return_tibble
hgnc_id_from_hgnc_id
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>%
select(hgnc_id = value) %>%
mutate(hgnc_id = as.integer(hgnc_id))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return_tibble
symbol_from_hgnc_id <- function(hgnc_id_tibble) {
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>%
select(hgnc_id = value) %>%
mutate(hgnc_id = as.integer(hgnc_id))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return(return_tibble)
}
symbol_from_hgnc_id("NAA10")
symbol_from_hgnc_id("1753")
symbol_from_hgnc_id("18704")
symbol_from_hgnc_id(c("18704", "1753"))
############################################
## load libraries
library(tidyverse)	##needed for general table operations
library(jsonlite)	##needed for HGNC requests
############################################
############################################
## define HGNC functions
hgnc_id_from_prevsymbol <- function(symbol_input)  {
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/prev_symbol/", symbol_input))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) symbol else "") %>%
mutate(score = if (exists('score', where = hgnc_id_from_symbol)) score else 0) %>%
arrange(desc(score)) %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return(as.integer(hgnc_id_from_symbol$hgnc_id[1]))
}
hgnc_id_from_aliassymbol <- function(symbol_input)  {
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/alias_symbol/", symbol_input))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) symbol else "") %>%
mutate(score = if (exists('score', where = hgnc_id_from_symbol)) score else 0) %>%
arrange(desc(score)) %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return(as.integer(hgnc_id_from_symbol$hgnc_id[1]))
}
hgnc_id_from_symbol <- function(symbol_tibble) {
symbol_list_tibble <- as_tibble(symbol_tibble) %>% select(symbol = value) %>% mutate(symbol = toupper(symbol))
symbol_request <- fromJSON(paste0("http://rest.genenames.org/search/symbol/", str_c(symbol_list_tibble$symbol, collapse = "+OR+")))
hgnc_id_from_symbol <- as_tibble(symbol_request$response$docs)
hgnc_id_from_symbol <- hgnc_id_from_symbol %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_symbol)) hgnc_id else NA) %>%
mutate(symbol = if (exists('symbol', where = hgnc_id_from_symbol)) toupper(symbol) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- symbol_list_tibble %>%
left_join(hgnc_id_from_symbol, by = "symbol") %>%
select(hgnc_id)
return(return_tibble)
}
symbol_from_hgnc_id <- function(hgnc_id_tibble) {
hgnc_id_list_tibble <- as_tibble(hgnc_id_tibble) %>%
select(hgnc_id = value) %>%
mutate(hgnc_id = as.integer(hgnc_id))
hgnc_id_request <- fromJSON(paste0("http://rest.genenames.org/search/hgnc_id/", str_c(hgnc_id_list_tibble$hgnc_id, collapse = "+OR+")))
hgnc_id_from_hgnc_id <- as_tibble(hgnc_id_request$response$docs)
hgnc_id_from_hgnc_id <- hgnc_id_from_hgnc_id %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) hgnc_id else NA) %>%
mutate(hgnc_id = if (exists('hgnc_id', where = hgnc_id_from_hgnc_id)) toupper(hgnc_id) else "") %>%
mutate(hgnc_id = as.integer(str_split_fixed(hgnc_id, ":", 2)[, 2]))
return_tibble <- hgnc_id_list_tibble %>%
left_join(hgnc_id_from_hgnc_id, by = "hgnc_id") %>%
select(symbol)
return(return_tibble)
}
hgnc_id_from_symbol_grouped <- function(input_tibble, request_max = 150) {
input_tibble <- as_tibble(input_tibble)
row_number <- nrow(input_tibble)
groups_number <- ceiling(row_number/request_max)
input_tibble_request <- input_tibble %>%
mutate(group = sample(1:groups_number, row_number, replace=T)) %>%
group_by(group) %>%
mutate(response = hgnc_id_from_symbol(value)$hgnc_id) %>%
ungroup()
input_tibble_request_repair <- input_tibble_request %>%
filter(is.na(response)) %>%
select(value) %>%
unique() %>%
rowwise() %>%
mutate(response = hgnc_id_from_prevsymbol(value)) %>%
mutate(response = case_when(!is.na(response) ~ response, is.na(response) ~ hgnc_id_from_aliassymbol(value)))
input_tibble_request <- input_tibble_request %>%
left_join(input_tibble_request_repair, by = "value") %>%
mutate(response = case_when(!is.na(response.x) ~ response.x, is.na(response.x) ~ response.y))
return(input_tibble_request$response)
}
############################################
hgnc_id_from_symbol_grouped("NAA10")
symbol_from_hgnc_id("18704")
install.packages('DiagrammeR')
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
library(plumber)
setwd("C:/development/sysndd/api")
root <- pr("sysndd_plumber.R") %>%
pr_run(host = "0.0.0.0", port = 7778)
